name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install basedpyright ruff ty

    - name: Run ty check
      run: ty check

    - name: Run ruff check
      run: ruff check

    - name: Run basedpyright type checking
      run: |
        # Run basedpyright and only fail if there are actual errors
        basedpyright --level ERROR --outputjson > basedpyright_output.json || true
        error_count=$(python3 -c "import json; data=json.load(open('basedpyright_output.json')); errors=[d for d in data if isinstance(d, dict) and d.get('severity')=='error']; print(len(errors))")
        if [ "$error_count" -gt 0 ]; then
          echo "Found $error_count errors in basedpyright output:"
          basedpyright --level ERROR
          exit 1
        else
          echo "No errors found, warnings are acceptable"
          basedpyright --level ERROR
        fi

    - name: Run pytest
      run: pytest